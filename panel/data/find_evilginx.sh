#!/bin/bash

# Script to find evilginx installation and create symlinks

# Set colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Helper functions
log() {
  echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warning() {
  echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
  echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# Get the panel directory - this helps us find where we are regardless of how the script is called
PANEL_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
CONFIG_DIR="$PANEL_DIR/src/config"

# Possible evilginx locations
POSSIBLE_PATHS=(
  "/root/myginxV2/evilginx3"
  "/root/myginx/evilginx3"
  "/opt/myginx/evilginx3"
  "$(cd "$PANEL_DIR/../.." && pwd)/evilginx3"
  "$HOME/myginx/evilginx3"
  "$HOME/myginxV2/evilginx3"
)

log "Looking for evilginx installation..."

# Find evilginx path
EVILGINX_PATH=""
for path in "${POSSIBLE_PATHS[@]}"; do
  if [ -d "$path" ] && [ -f "$path/evilginx3" ]; then
    log "Found evilginx at: $path"
    EVILGINX_PATH="$path"
    break
  fi
done

if [ -z "$EVILGINX_PATH" ]; then
  error "Could not find evilginx installation in any standard location!"
  echo ""
  echo "Please enter the full path to your evilginx3 installation directory:"
  read -r custom_path
  
  if [ -d "$custom_path" ] && [ -f "$custom_path/evilginx3" ]; then
    EVILGINX_PATH="$custom_path"
    log "Using custom evilginx path: $EVILGINX_PATH"
  else
    error "Invalid path or evilginx3 executable not found at: $custom_path"
    error "Please install evilginx3 or provide a valid path."
    exit 1
  fi
fi

# Update the paths.ts file
if [ -d "$CONFIG_DIR" ]; then
  log "Updating paths configuration file..."
  
  # Create paths.ts if it doesn't exist or update it
  cat > "$CONFIG_DIR/paths.ts" << EOL
/**
 * This file contains configurable paths for the application
 * Edit these values to match your deployment environment
 * Auto-generated by find_evilginx.sh on $(date)
 */

// Evilginx binary location - adjust based on your installation
export const EVILGINX_PATHS = [
  "${EVILGINX_PATH}", // Primary path (auto-detected)
  "/root/myginxV2/evilginx3",
  "/root/myginx/evilginx3",
  "/opt/myginx/evilginx3",
];

// Database paths
export const DATABASE_PATHS = {
  GOPHISH_DB: "../gophish/gophish.db", // Path relative to evilginx binary
};

// Commands
export const EVILGINX_COMMAND = "./evilginx3 -feed -g ../gophish/gophish.db";
EOL

  log "Successfully updated paths configuration at: $CONFIG_DIR/paths.ts"
else
  warning "Config directory not found at: $CONFIG_DIR"
  warning "Could not update paths configuration file"
fi

# Create a symlink in the panel/bin directory for easy access
BIN_DIR="$PANEL_DIR/bin"
if [ ! -d "$BIN_DIR" ]; then
  mkdir -p "$BIN_DIR"
fi

SYMLINK_PATH="$BIN_DIR/evilginx3"
if [ -L "$SYMLINK_PATH" ]; then
  rm "$SYMLINK_PATH"
fi

ln -sf "$EVILGINX_PATH/evilginx3" "$SYMLINK_PATH"
log "Created symlink to evilginx3 at: $SYMLINK_PATH"

# Make the symlink executable
chmod +x "$SYMLINK_PATH"

log "Setup complete!"
echo ""
echo "Evilginx path: $EVILGINX_PATH"
echo "Symlink: $SYMLINK_PATH"
echo ""
echo "You can now restart evilginx through the panel."
echo "If you still have issues, edit the path directly in: $CONFIG_DIR/paths.ts" 